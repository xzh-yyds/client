{"ast":null,"code":"import data from '../assets/data.json';\nexport default {\n  name: 'graph',\n  data() {\n    return {\n      tableData: [],\n      loading: false\n    };\n  },\n  mounted() {\n    this.drawLine();\n  },\n  methods: {\n    drawLine() {\n      var myChart = this.$echarts.init(document.getElementById('graph'));\n      var option = {\n        title: {\n          text: 'Les Miserables',\n          subtext: 'Circular layout',\n          top: 'bottom',\n          left: 'right'\n        },\n        tooltip: {},\n        legend: [{\n          data: graph.categories.map(function (a) {\n            return a.name;\n          })\n        }],\n        animationDurationUpdate: 1500,\n        animationEasingUpdate: 'quinticInOut',\n        series: [{\n          name: 'Les Miserables',\n          type: 'graph',\n          layout: 'circular',\n          circular: {\n            rotateLabel: true\n          },\n          data: graph.nodes,\n          links: graph.links,\n          categories: graph.categories,\n          roam: true,\n          label: {\n            position: 'right',\n            formatter: '{b}'\n          },\n          lineStyle: {\n            color: 'source',\n            curveness: 0.3\n          }\n        }]\n      };\n      myChart.showLoading();\n      console.log(data);\n      option.series[0].data = JSON.parse(data);\n      myChart.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["data","name","tableData","loading","mounted","drawLine","methods","myChart","$echarts","init","document","getElementById","option","title","text","subtext","top","left","tooltip","legend","graph","categories","map","a","animationDurationUpdate","animationEasingUpdate","series","type","layout","circular","rotateLabel","nodes","links","roam","label","position","formatter","lineStyle","color","curveness","showLoading","console","log","JSON","parse","setOption"],"sources":["src/components/RelationGraph.vue"],"sourcesContent":["<template>\n    <div id=\"graph\" :style=\"{width: '800px', height: '600px'}\"></div>\n    <!-- <el-table\n      v-loading=\"loading\"\n      :data=\"tableData\"\n      style=\"width: 100%\">\n      <el-table-column\n        prop=\"name\"\n        label=\"类名\"\n        min-width=\"250px\">\n      </el-table-column>\n      <el-table-column\n        prop=\"partition\"\n        label=\"分区\"\n        min-width=\"250px\">\n      </el-table-column>\n      <el-table-column\n        prop=\"sampleNum\"\n        label=\"用例\"\n        min-width=\"250px\">\n      </el-table-column>\n    </el-table> -->\n</template>\n\n<style>\nbody {\n    margin: 0;\n}\n</style>\n\n<script>\nimport data from '../assets/data.json'\nexport default {\n    name: 'graph',\n    data() {\n        return {\n            tableData: [],\n            loading: false\n        };\n    },\n    mounted() {\n        this.drawLine()\n    },\n    methods: {\n        drawLine() {\n            var myChart = this.$echarts.init(document.getElementById('graph'))\n            var option = {\n                title: {\n                    text: 'Les Miserables',\n                    subtext: 'Circular layout',\n                    top: 'bottom',\n                    left: 'right'\n                },\n                tooltip: {},\n                legend: [\n                {\n                    data: graph.categories.map(function (a) {\n                        return a.name;\n                    })\n                }\n                ],\n                animationDurationUpdate: 1500,\n                animationEasingUpdate: 'quinticInOut',\n                series: [\n                    {\n                        name: 'Les Miserables',\n                        type: 'graph',\n                        layout: 'circular',\n                        circular: {\n                            rotateLabel: true\n                        },\n                        data: graph.nodes,\n                        links: graph.links,\n                        categories: graph.categories,\n                        roam: true,\n                        label: {\n                            position: 'right',\n                            formatter: '{b}'\n                        },\n                        lineStyle: {\n                            color: 'source',\n                            curveness: 0.3\n                        }\n                    }\n                ]\n            };\n            myChart.showLoading();\n            console.log(data)\n            option.series[0].data = JSON.parse(data)\n            myChart.setOption(option)\n        }\n    }\n};\n</script>"],"mappings":"AA+BA,OAAAA,IAAA;AACA;EACAC,IAAA;EACAD,KAAA;IACA;MACAE,SAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,QAAA;EACA;EACAC,OAAA;IACAD,SAAA;MACA,IAAAE,OAAA,QAAAC,QAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACA,IAAAC,MAAA;QACAC,KAAA;UACAC,IAAA;UACAC,OAAA;UACAC,GAAA;UACAC,IAAA;QACA;QACAC,OAAA;QACAC,MAAA,GACA;UACAnB,IAAA,EAAAoB,KAAA,CAAAC,UAAA,CAAAC,GAAA,WAAAC,CAAA;YACA,OAAAA,CAAA,CAAAtB,IAAA;UACA;QACA,EACA;QACAuB,uBAAA;QACAC,qBAAA;QACAC,MAAA,GACA;UACAzB,IAAA;UACA0B,IAAA;UACAC,MAAA;UACAC,QAAA;YACAC,WAAA;UACA;UACA9B,IAAA,EAAAoB,KAAA,CAAAW,KAAA;UACAC,KAAA,EAAAZ,KAAA,CAAAY,KAAA;UACAX,UAAA,EAAAD,KAAA,CAAAC,UAAA;UACAY,IAAA;UACAC,KAAA;YACAC,QAAA;YACAC,SAAA;UACA;UACAC,SAAA;YACAC,KAAA;YACAC,SAAA;UACA;QACA;MAEA;MACAhC,OAAA,CAAAiC,WAAA;MACAC,OAAA,CAAAC,GAAA,CAAA1C,IAAA;MACAY,MAAA,CAAAc,MAAA,IAAA1B,IAAA,GAAA2C,IAAA,CAAAC,KAAA,CAAA5C,IAAA;MACAO,OAAA,CAAAsC,SAAA,CAAAjC,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}