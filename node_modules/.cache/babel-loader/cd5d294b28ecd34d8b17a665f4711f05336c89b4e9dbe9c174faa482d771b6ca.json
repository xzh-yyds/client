{"ast":null,"code":"import _ElementUI2 from \"element-ui/lib/theme-chalk/index.css\";\nimport _ElementUI from \"element-ui/lib\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport 'element-ui/lib/theme-chalk/index.css';\nimport router from './router';\nimport axios from 'axios';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faHatWizard, faPalette, faArrowRightLong } from '@fortawesome/free-solid-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\nlibrary.add(faHatWizard);\nlibrary.add(faPalette);\nlibrary.add(faGithub);\nlibrary.add(faArrowRightLong);\nVue.component('font-awesome-icon', FontAwesomeIcon);\nVue.use(_ElementUI);\nVue.config.productionTip = false;\nVue.prototype.$http = axios;\naxios.defaults.baseURL = \"124.220.17.130\";\n\n// request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\naxios.interceptors.request.use(config => {\n  config.headers['Content-Type'] = 'application/json;charset=utf-8';\n\n  // config.headers['token'] = user.token;  // 设置请求头\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// response 拦截器\n// 可以在接口响应后统一处理结果\naxios.interceptors.response.use(response => {\n  let res = response.data;\n  // 如果是返回的文件\n  if (response.config.responseType === 'blob') {\n    return res;\n  }\n  // 兼容服务端返回的字符串数据\n  if (typeof res === 'string') {\n    res = res ? JSON.parse(res) : res;\n  }\n  return res;\n}, error => {\n  console.log('err' + error); // for debug\n  return Promise.reject(error);\n});\nnew Vue({\n  router,\n  render: h => h(App)\n}).$mount('#app');","map":{"version":3,"names":["Vue","App","router","axios","library","faHatWizard","faPalette","faArrowRightLong","faGithub","FontAwesomeIcon","add","component","use","_ElementUI","config","productionTip","prototype","$http","defaults","baseURL","interceptors","request","headers","error","Promise","reject","response","res","data","responseType","JSON","parse","console","log","render","h","$mount"],"sources":["/Users/lightning/Documents/毕业论文/代码/client/src/main.js"],"sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\nimport router from './router'\nimport axios from 'axios'\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faHatWizard, faPalette, faArrowRightLong } from '@fortawesome/free-solid-svg-icons'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\n\nlibrary.add(faHatWizard)\nlibrary.add(faPalette)\nlibrary.add(faGithub)\nlibrary.add(faArrowRightLong)\n\nVue.component('font-awesome-icon', FontAwesomeIcon)\n\nVue.use(ElementUI)\nVue.config.productionTip = false\nVue.prototype.$http = axios\n\naxios.defaults.baseURL = \"124.220.17.130\"\n\n// request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\naxios.interceptors.request.use(config => {\n    config.headers['Content-Type'] = 'application/json;charset=utf-8';\n\n    // config.headers['token'] = user.token;  // 设置请求头\n    return config\n  }, error => {\n    return Promise.reject(error)\n});\n\n// response 拦截器\n// 可以在接口响应后统一处理结果\naxios.interceptors.response.use(\nresponse => {\n  let res = response.data;\n  // 如果是返回的文件\n  if (response.config.responseType === 'blob') {\n    return res\n  }\n  // 兼容服务端返回的字符串数据\n  if (typeof res === 'string') {\n    res = res ? JSON.parse(res) : res\n  }\n  return res;\n},\nerror => {\n    console.log('err' + error) // for debug\n    return Promise.reject(error)\n}\n)\n\n\n\nnew Vue({\n  router,\n  render: h => h(App),\n}).$mount('#app')\n"],"mappings":";;AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAE3B,OAAO,sCAAsC;AAC7C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,OAAO,QAAQ,mCAAmC;AAC3D,SAASC,WAAW,EAAEC,SAAS,EAAEC,gBAAgB,QAAQ,mCAAmC;AAC5F,SAASC,QAAQ,QAAQ,oCAAoC;AAC7D,SAASC,eAAe,QAAQ,8BAA8B;AAE9DL,OAAO,CAACM,GAAG,CAACL,WAAW,CAAC;AACxBD,OAAO,CAACM,GAAG,CAACJ,SAAS,CAAC;AACtBF,OAAO,CAACM,GAAG,CAACF,QAAQ,CAAC;AACrBJ,OAAO,CAACM,GAAG,CAACH,gBAAgB,CAAC;AAE7BP,GAAG,CAACW,SAAS,CAAC,mBAAmB,EAAEF,eAAe,CAAC;AAEnDT,GAAG,CAACY,GAAG,CAAAC,UAAU,CAAC;AAClBb,GAAG,CAACc,MAAM,CAACC,aAAa,GAAG,KAAK;AAChCf,GAAG,CAACgB,SAAS,CAACC,KAAK,GAAGd,KAAK;AAE3BA,KAAK,CAACe,QAAQ,CAACC,OAAO,GAAG,gBAAgB;;AAEzC;AACA;AACA;AACAhB,KAAK,CAACiB,YAAY,CAACC,OAAO,CAACT,GAAG,CAACE,MAAM,IAAI;EACrCA,MAAM,CAACQ,OAAO,CAAC,cAAc,CAAC,GAAG,gCAAgC;;EAEjE;EACA,OAAOR,MAAM;AACf,CAAC,EAAES,KAAK,IAAI;EACV,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;;AAEF;AACA;AACApB,KAAK,CAACiB,YAAY,CAACM,QAAQ,CAACd,GAAG,CAC/Bc,QAAQ,IAAI;EACV,IAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EACvB;EACA,IAAIF,QAAQ,CAACZ,MAAM,CAACe,YAAY,KAAK,MAAM,EAAE;IAC3C,OAAOF,GAAG;EACZ;EACA;EACA,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IAC3BA,GAAG,GAAGA,GAAG,GAAGG,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC,GAAGA,GAAG;EACnC;EACA,OAAOA,GAAG;AACZ,CAAC,EACDJ,KAAK,IAAI;EACLS,OAAO,CAACC,GAAG,CAAC,KAAK,GAAGV,KAAK,CAAC,EAAC;EAC3B,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACA,CAAC;AAID,IAAIvB,GAAG,CAAC;EACNE,MAAM;EACNgC,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAAClC,GAAG;AACpB,CAAC,CAAC,CAACmC,MAAM,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}