{"ast":null,"code":"export default {\n  data() {\n    var validateModel = (rule, value, callback) => {\n      if (value === '' || value === null) {\n        callback(new Error('请选择模型聚类'));\n      }\n      callback();\n    };\n    var validateK = (rule, value, callback) => {\n      let pattern = /^[0-9]+([.]{1}[0-9]+){0,1}$/;\n      if (value === '' || value === null) {\n        callback(new Error('请输入K数量'));\n      } else if (!pattern.test(value)) {\n        callback(new Error('K必须是数字类型'));\n      } else if (value <= 1 && value > 255) {\n        callback(new Error('K数量在2-255之间'));\n      }\n    };\n    return {\n      paraForm: {\n        model: null,\n        k: null,\n        leastNum: null\n      },\n      rules: {\n        model: [{\n          validator: validateModel,\n          trigger: 'blur'\n        }],\n        k: [{\n          validator: validateK,\n          trigger: 'blur'\n        }\n        // { required: true, message: '请选择微服务数量', trigger: 'blur' },\n        // { type: 'number', message: '必须为数字值', trigger: 'blur'}, // 且不包括小数\n        // { pattern: /^([2-9]|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])$/, message: '范围在2-255', trigger: 'blur'} \n        ],\n\n        leastNum: [{\n          validator: validateK,\n          trigger: 'blur'\n        }\n        // { required: true, message: '请选择微服务最少数量(ISODATA)'},\n        // { type: 'number', message: '必须为数字值'}, // 且不包括小数\n        // { pattern: /^([2-9]|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])$/, message: '范围在2-255', trigger: 'blur'} \n        ]\n      }\n    };\n  },\n\n  methods: {}\n};","map":{"version":3,"names":["data","validateModel","rule","value","callback","Error","validateK","pattern","test","paraForm","model","k","leastNum","rules","validator","trigger","methods"],"sources":["src/components/ParameterSetting.vue"],"sourcesContent":["<template>\n    <div>\n        <br>\n        <el-form ref=\"form\" v-model=\"paraForm\" :rules=\"rules\" label-width=\"200px\" size=\"big\">\n            <el-form-item label=\"输入模型聚类\" prop=\"model\">\n                <el-select v-model=\"paraForm.model\" placeholder=\"请选择模型使用聚类\">\n                    <el-option label=\"KMeans++聚类\" value=\"kmeans\"></el-option>\n                    <el-option label=\"MiniBatchKMeans聚类\" value=\"minibatch\"></el-option>\n                    <el-option label=\"ISODATA聚类\" value=\"isodata\"></el-option>\n                </el-select>\n            </el-form-item>\n            <el-form-item label=\"输入划分微服务数量\" prop=\"k\">\n                <el-input v-model=\"paraForm.k\" placeholder=\"输入微服务划分数量\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"输入最小划分数量\" v-show=\"this.paraForm.model===`isodata`\" prop=\"leastNum\">\n                <el-input v-model=\"paraForm.leastNum\" placeholder=\"输入最小划分数量(ISODATA)\"></el-input>\n            </el-form-item>\n        </el-form>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        var validateModel = (rule, value, callback) => {\n            if (value === '' || value === null) {\n                callback(new Error('请选择模型聚类'));\n            }\n            callback();\n        };\n        var validateK = (rule, value, callback) => {\n            let pattern = /^[0-9]+([.]{1}[0-9]+){0,1}$/;\n            if(value === '' || value === null) {\n                callback(new Error('请输入K数量'))\n            } else if(!pattern.test(value)) {\n                callback(new Error('K必须是数字类型'))\n            } else if(value <= 1 && value > 255) {\n                callback(new Error('K数量在2-255之间'))\n            }\n        };\n        return {\n            paraForm: {\n                model: null,\n                k: null,\n                leastNum: null,\n            },\n            rules: {\n                model: [\n                    { validator: validateModel, trigger: 'blur' }\n                ],\n                k: [\n                    { validator: validateK, trigger: 'blur' },\n                    // { required: true, message: '请选择微服务数量', trigger: 'blur' },\n                    // { type: 'number', message: '必须为数字值', trigger: 'blur'}, // 且不包括小数\n                    // { pattern: /^([2-9]|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])$/, message: '范围在2-255', trigger: 'blur'} \n                ],\n                leastNum: [\n                    { validator: validateK, trigger: 'blur' },\n                    // { required: true, message: '请选择微服务最少数量(ISODATA)'},\n                    // { type: 'number', message: '必须为数字值'}, // 且不包括小数\n                    // { pattern: /^([2-9]|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])$/, message: '范围在2-255', trigger: 'blur'} \n                ]\n            }\n      };\n    },\n    methods: {\n\n    }\n}\n</script>\n\n<style lang=\"less\" scoped>\n\n</style>"],"mappings":"AAsBA;EACAA,KAAA;IACA,IAAAC,aAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA,WAAAA,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;MACAD,QAAA;IACA;IACA,IAAAE,SAAA,GAAAA,CAAAJ,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAG,OAAA;MACA,IAAAJ,KAAA,WAAAA,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,YAAAE,OAAA,CAAAC,IAAA,CAAAL,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,SAAAA,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;IACA;IACA;MACAI,QAAA;QACAC,KAAA;QACAC,CAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAH,KAAA,GACA;UAAAI,SAAA,EAAAb,aAAA;UAAAc,OAAA;QAAA,EACA;QACAJ,CAAA,GACA;UAAAG,SAAA,EAAAR,SAAA;UAAAS,OAAA;QAAA;QACA;QACA;QACA;QAAA,CACA;;QACAH,QAAA,GACA;UAAAE,SAAA,EAAAR,SAAA;UAAAS,OAAA;QAAA;QACA;QACA;QACA;QAAA;MAEA;IACA;EACA;;EACAC,OAAA,GAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}